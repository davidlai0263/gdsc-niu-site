generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model users {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  userPath String  @unique
  name     String
  photo    String?
  role     role    @default(MEMBER)
  // myPosts        posts[]         @relation("MyPosts")
  // favoritedPosts posts[]         @relation("FavoritedBy")
  // userpreference userpreference?
}

// model userpreference {
//   id           String  @id @default(auto()) @map("_id") @db.ObjectId
//   emailUpdates Boolean
//   user         users   @relation(fields: [userId], references: [id], onDelete: Cascade)
//   userId       String  @unique @db.ObjectId
// }

model contacts {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  message String
  name    String
}

model posts {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  shortId        String   @unique
  title          String
  titleImage     String
  content        String
  description    String
  publishedAt    DateTime
  lastChangeAt   DateTime
  lastChangeUser String?  @db.ObjectId
  tags           String[]
  bookMarked     Boolean
  liked          Int
  // author        users     @relation("MyPosts", fields: [authorId], references: [id])
  // authorId      String    @db.ObjectId
  // favoritedBy   users?    @relation("FavoritedBy", fields: [favoritedById], references: [id])
  // favoritedById String?   @db.ObjectId
  // category      category? @relation(fields: [categoryId], references: [id])
  // categoryId    String?   @db.ObjectId
}

// model category {
//   id    String  @id @default(auto()) @map("_id") @db.ObjectId
//   name  String  @unique
//   posts posts[]
// }

enum role {
  MEMBER
  CORETEAM
}
