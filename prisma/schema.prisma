generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model users {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  googleId       String          @unique
  email          String          @unique
  role           role            @default(BASIC)
  socialAccount  Json
  myPosts        posts[]         @relation("MyPosts")
  favoritedPosts posts[]         @relation("FavoritedBy")
  userpreference userpreference?
}

model userpreference {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  emailUpdates Boolean
  user         users   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String  @unique @db.ObjectId
}

model contacts {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  message String
  name    String
}

model posts {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  content       String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  views         Int
  author        users     @relation("MyPosts", fields: [authorId], references: [id])
  authorId      String    @db.ObjectId
  favoritedBy   users?    @relation("FavoritedBy", fields: [favoritedById], references: [id])
  favoritedById String?   @db.ObjectId
  category      category? @relation(fields: [categoryId], references: [id])
  categoryId    String?   @db.ObjectId
}

model category {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  name  String  @unique
  posts posts[]
}

enum role {
  BASIC
  ADMIN
}
